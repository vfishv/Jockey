/*
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
*/

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
//apply plugin: 'kotlin-android-extensions'
//apply plugin: 'io.fabric'

//repositories {
//    maven { url 'https://maven.fabric.io/public' }
//}

def config = rootProject.extensions.getByName("ext")

android {
    compileSdk config.compileSdkVersion
    namespace "com.marverenic.music"

    compileOptions {
        // Flag to enable support for the new language APIs
        //coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    buildFeatures {
        buildConfig = true
        aidl = true
        viewBinding = true
        dataBinding = true
        //buildFeatures.compose = true
    }

    defaultConfig {
        applicationId "com.marverenic.music"
        minSdkVersion 16
        targetSdkVersion config.targetSdkVersion
        versionCode 40325
        versionName "3.0 RC 1"
        resConfigs "en", "es", "nl"
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // Setting the "NO_CRASHLYTICS" environment variable to "true" prevents crashlytics from
            // being processed on release builds. This is allows Travis CI builds to succeed without
            // checking API keys into version control
            boolean disableCrashlytics = "true".equalsIgnoreCase("$System.env.NO_CRASHLYTICS")
            ext.enableCrashlytics = !disableCrashlytics
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix '.debug'
            ext.enableCrashlytics = false
        }
    }

    flavorDimensions "implementation"
    productFlavors {
        hathor {
            dimension "implementation"
        }

        marketing {
            dimension "implementation"
            applicationIdSuffix ".demo"
            versionNameSuffix ".demo"
            ext.enableCrashlytics = false
        }
    }

    bundle {
        language {
            enableSplit = false
        }
    }
}

//androidExtensions {
//    // Disable Kotlin synthetic views
//    features = ["parcelize"]
//}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Kotlin
    implementation config.deps.kotlin.stdlib

    // Androidx
    implementation config.deps.androidx.core
    implementation config.deps.androidx.ktx
    implementation config.deps.androidx.annotation
    implementation config.deps.androidx.fragment
    implementation config.deps.androidx.material
    implementation config.deps.androidx.media
    implementation config.deps.androidx.palette
    implementation config.deps.androidx.preference
    implementation config.deps.androidx.recyclerView
    implementation config.deps.androidx.cardView
    implementation config.deps.androidx.constraintLayout
    implementation config.deps.androidx.coordinatorLayout
    implementation config.deps.androidx.drawerLayout
    implementation config.deps.androidx.swipeRefreshLayout

    // Dagger
    implementation config.deps.dagger.runtime
    kapt config.deps.dagger.compiler

    // RxJava
    implementation config.deps.rxJava.core
    implementation config.deps.rxJava.android
    implementation config.deps.rxJava.lifecycle
    implementation config.deps.rxJava.lifecycleExtras
    implementation config.deps.rxJava.permissions
    implementation config.deps.rxJava.lint

    // Retrofit
    implementation config.deps.retrofit.core
    implementation config.deps.retrofit.gson
    implementation config.deps.retrofit.rxJava

    // Room
    implementation config.deps.room.runtime
    kapt config.deps.room.compiler
    testImplementation config.deps.room.test

    // ExoPlayer
    implementation config.deps.exoplayer.core
    implementation project(':exoplayer-flac')

    // Glide
    implementation config.deps.glide.core

    // GSON
    implementation config.deps.gson.core

    // Additional Views
    implementation config.deps.views.heterogeneousadapter
    implementation config.deps.views.recyclerviewFastscroll
    implementation config.deps.views.verticalseekbar
    implementation project(':seekarc')

    // Logging
    implementation config.deps.timber.core
//    implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
//        transitive = true
//    }

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.2.1'
}
